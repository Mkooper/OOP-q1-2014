/**
 * Tests generated by TUnit.
 */
public class TestStringLijst {

	/**
	 * Test: Test1: lijst met invalide constructie, alle methoden
	 */
	public static void test_Test1LijstMetInvalideConstructieAlleMethoden() {
		System.out.println("Test: Test1: lijst met invalide constructie, alle methoden");
		
		// test code
		printTestStatement("StringLijst sLijst = new StringLijst(-2);");
		StringLijst sLijst = new StringLijst(-2);
		printTestResult("sLijst.toString() == \"<StringLijst[]>\"", sLijst.toString(), "<StringLijst[]>");
		printTestStatement("sLijst.add(\"a\");");
		sLijst.add("a");
		printTestResult("sLijst.getSize() == 0;", sLijst.getSize(), 0);
		printTestResult("sLijst.get(0) == null", sLijst.get(0), null);
		printTestResult("sLijst.index(\"a\") == -1", sLijst.index("a"), -1);
		printTestResult("sLijst.contains(\"a\") == false", sLijst.contains("a"), false);
		printTestStatement("sLijst.set(0,\"b\");");
		sLijst.set(0,"b");
		printTestResult("sLijst.equals(sLijst) == true", sLijst.equals(sLijst), true);
		printTestResult("sLijst.toString() == \"<StringLijst[]>\"", sLijst.toString(), "<StringLijst[]>");
		
		System.out.println();
	}

	/**
	 * Test: Test2: lijst met capaciteit = 3 en 2  toevoegde elementen, alle operaties
	 */
	public static void test_Test2LijstMetCapaciteit3En2ToevoegdeElementenAlleOperaties() {
		System.out.println("Test: Test2: lijst met capaciteit = 3 en 2  toevoegde elementen, alle operaties");
		
		// test code
		printTestStatement("StringLijst sLijst = new StringLijst(3);");
		StringLijst sLijst = new StringLijst(3);
		printTestResult("sLijst.toString() == \"<StringLijst[]>\"", sLijst.toString(), "<StringLijst[]>");
		printTestResult("sLijst.getSize() == 0;", sLijst.getSize(), 0);
		printTestStatement("sLijst.add(\"a\");");
		sLijst.add("a");
		printTestStatement("sLijst.add(\"b\");");
		sLijst.add("b");
		printTestResult("sLijst.getSize() == 2;", sLijst.getSize(), 2);
		printTestResult("sLijst.get(0) == \"a\"", sLijst.get(0), "a");
		printTestResult("sLijst.index(\"a\") == 0", sLijst.index("a"), 0);
		printTestResult("sLijst.contains(\"a\") == true", sLijst.contains("a"), true);
		printTestResult("sLijst.get(1) == \"b\"", sLijst.get(1), "b");
		printTestResult("sLijst.index(\"b\") == 1", sLijst.index("b"), 1);
		printTestResult("sLijst.contains(\"b\") == true", sLijst.contains("b"), true);
		printTestResult("sLijst.index(\"c\") == -1", sLijst.index("c"), -1);
		printTestResult("sLijst.contains(\"c\") == false", sLijst.contains("c"), false);
		printTestStatement("sLijst.set(0,\"c\");");
		sLijst.set(0,"c");
		printTestResult("sLijst.get(0) == \"c\"", sLijst.get(0), "c");
		printTestResult("sLijst.index(\"c\") == 0", sLijst.index("c"), 0);
		printTestResult("sLijst.contains(\"c\") == true", sLijst.contains("c"), true);
		printTestResult("sLijst.equals(sLijst) == true", sLijst.equals(sLijst), true);
		
		System.out.println();
	}

	/**
	 * Test: Test3: lijst met capaciteit = 3 en 4 toegevoegde elementen, alle methoden
	 */
	public static void test_Test3LijstMetCapaciteit3En4ToegevoegdeElementenAlleMethoden() {
		System.out.println("Test: Test3: lijst met capaciteit = 3 en 4 toegevoegde elementen, alle methoden");
		
		// test code
		printTestStatement("StringLijst sLijst = new StringLijst(3);");
		StringLijst sLijst = new StringLijst(3);
		printTestResult("sLijst.toString() == \"<StringLijst[]>\"", sLijst.toString(), "<StringLijst[]>");
		printTestResult("sLijst.getSize() == 0;", sLijst.getSize(), 0);
		printTestStatement("sLijst.add(\"a\");");
		sLijst.add("a");
		printTestStatement("sLijst.add(\"b\");");
		sLijst.add("b");
		printTestStatement("sLijst.add(\"a\");");
		sLijst.add("a");
		printTestStatement("sLijst.add(\"d\");");
		sLijst.add("d");
		printTestResult("sLijst.getSize() == 3;", sLijst.getSize(), 3);
		printTestResult("sLijst.get(0) == \"a\"", sLijst.get(0), "a");
		printTestResult("sLijst.index(\"a\") == 0", sLijst.index("a"), 0);
		printTestResult("sLijst.contains(\"a\") == true", sLijst.contains("a"), true);
		printTestResult("sLijst.get(1) == \"b\"", sLijst.get(1), "b");
		printTestResult("sLijst.index(\"d\") == -1", sLijst.index("d"), -1);
		printTestResult("sLijst.contains(\"d\") == false", sLijst.contains("d"), false);
		printTestResult("sLijst.index(\"c\") == -1", sLijst.index("c"), -1);
		printTestResult("sLijst.contains(\"c\") == false", sLijst.contains("c"), false);
		printTestStatement("sLijst.set(2,\"c\");");
		sLijst.set(2,"c");
		printTestResult("sLijst.get(2) == \"c\"", sLijst.get(2), "c");
		printTestResult("sLijst.index(\"c\") == 2", sLijst.index("c"), 2);
		printTestResult("sLijst.contains(\"c\") == true", sLijst.contains("c"), true);
		printTestResult("sLijst.equals(sLijst) == true", sLijst.equals(sLijst), true);
		
		System.out.println();
	}

	/** Prints the statement */
	public static void printTestStatement(String testStatement) {
		System.out.println(" "+testStatement);
	}

	/**
	 * Compares the actual result with the expected result
	 * and prints the result of this test
	 */
	public static void printTestResult(String testName, int actual, int expected) {
		System.out.printf(" %-50s => ", testName);
		if (expected == actual) {
			System.out.println("passed");
		} else {
			System.out.println(" FAILED");
			System.out.println("  -> expected " + expected + " but was " + actual);
			System.out.println();
		}
	}

	/**
	 * Compares the actual result with the expected result
	 * and prints the result of this test
	 */
	public static void printTestResult(String testName, double actual, double expected) {
		System.out.printf(" %-50s => ", testName);
		if (Math.abs(expected - actual) < 1e-10) {
			System.out.println("passed");
		} else {
			System.out.println(" FAILED");
			System.out.println("  -> expected " + expected + " but was " + actual);
			System.out.println();
		}
	}

	/**
	 * Compares the actual result with the expected result
	 * and prints the result of this test
	 */
	public static void printTestResult(String testName, boolean actual, boolean expected) {
		System.out.printf(" %-50s => ", testName);
		if (expected == actual) {
			System.out.println("passed");
		} else {
			System.out.println(" FAILED");
			System.out.println("  -> expected " + expected + " but was " + actual);
			System.out.println();
		}
	}

	/**
	 * Compares the actual result with the expected result
	 * and prints the result of this test
	 */
	public static void printTestResult(String testName, int[] actual, int[] expected) {
		System.out.printf(" %-50s => ", testName);
		if (java.util.Arrays.equals(expected, actual)) {
			System.out.println("passed");
		} else {
			System.out.print(" FAILED\\n -> expected:\\n ");
			System.out.println(java.util.Arrays.toString(expected));
			System.out.print("    but was:\\n ");
			System.out.println(java.util.Arrays.toString(actual));
			System.out.println();
		}
	}

	/**
	 * Compares the actual result with the expected result
	 * and prints the result of this test
	 */
	public static void printTestResult(String testName, Object actual, Object expected) {
		System.out.printf(" %-50s => ", testName);
		if ((expected==null && actual==null) || (expected!=null && expected.equals(actual))) {
			System.out.println("passed");
		} else {
			System.out.print(" FAILED\\n -> expected:\\n");
			System.out.print(" \"" + expected + "\"");
			System.out.print("    but was:\\n    ");
			System.out.print(" \"" + actual+ "\"");
			System.out.println();
		}
	}


	/**
	 * Main method: run all tests.
	 */
	public static void main(String[] args) {
		test_Test1LijstMetInvalideConstructieAlleMethoden();
		test_Test2LijstMetCapaciteit3En2ToevoegdeElementenAlleOperaties();
		test_Test3LijstMetCapaciteit3En4ToegevoegdeElementenAlleMethoden();
	}

}
